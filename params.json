{"name":"Oauth2fm-ForGoogleAPI","tagline":"Make calls to GoogleAPI from FileMaker, and let this module handle the Tokens and Authentication.","body":"# OAuth2FM-ForGoogleAPI\r\nMake calls to GoogleAPI from FileMaker, and let this module handle the Tokens and Authentication.\r\n\r\n\r\n\r\n## A Simple Dashboard And A Single Script To Call, Provides FileMaker Developers With A Powerful Tool!\r\n*\tCreate and Manage multiple Google Account Profiles, each with multiple variations of privileges for that Account\r\n\r\n*\tPresent your users with the Googles Login Page, followed by the Google page which prompts users to 'allow this app access to your Google Account Data'\r\n\r\n*\tReady to use as a separate file with your solution - Simply Call 1 Script\r\n\r\n*\tIncorporate into your own solution** - using 2 Layouts, 1 Table, and 1 Script (with 2 subscripts)  \r\nOptional Value Lists (and one table for Value List reference) are not required, but streamlineProfile creation on the dashboard\r\n\r\n---\r\n\r\n### Use Case 1\r\n**Use this individual File as part of your overall solution, calling the OAuth_Processor Script like an API call**\r\n\r\n1.\t Open this file, and create and name an Authentication Profile on the Dashboard.\r\n\t*\tcomprehensive help is provided on the Layout, explaining exactly how to populate the fields\r\n\r\n2.\t Call the OAuth_Processor Script from inside your solution, the script returns the valid Token(s) required to make a Google API Call\r\n\t*\tOptionaly, include the Profile Name as the Script Parameter\r\n\t*\tPassing no Parameter will use the Profile in the Active record from the Profile Table \r\n\t*\tadditional documentation is found in the Comments of the OAuth_Processor Script (and on-screen help)\r\n\r\n3.\tOpen the OAuth_Example_APIcall Script in the Examples and Tests Folder\r\n\t*\tHere you will find an example use case\r\n\t*\tAlso, open and read the comments in the Script: OAuth_Processor\r\n\r\n\r\n\r\n\r\n###Use Case 2\r\n**Import the components of this file into your solution.**  \r\n(do not re-name anything until you have fully tested it in your own solution)\r\n\r\n1.\t Import the OAuthProfiles Table (or copy it if you have FMP Advanced)  \r\n\t*\tOpen your FileMaker file, Select Manage>Databases from the File Menu\r\n\t*\tSelect the 'Tables' Tab, click the 'Import...' button, and select the OAuthProfiles Table from this file.\r\n\r\n2.\t Create two Layouts for the OAuthProfiles Table Occurence, name them \"OAuthProfiles_Dashboard\" and \"OAuthProfiles_WVpopup\"\r\n\t*\tOptionally, incorporate the Value Lists Table\r\n\t\t*\tImport the OAuthScopes Table the same you you imported the OAuthProfiles\r\n\t\t*\tRecreate the Value Lists in your own file, exactly as they exist in this one\r\n\r\n3.\t Import the OAuth2FM Scripts Folder into your Modules Scripts Folder: (or copy it if you have FMP Advanced)\r\n\t*\tOpen your FileMaker file, Select Manage>Scripts from the File Menu \r\n\t*\tClick the 'Import...' button, and select the OAuth2FM Scripts Folder\r\n\t*\tMove the OAuth2FM Scripts Folder into your Modules Scripts Folder\r\n\t\t*\tIf you dont have a Modules Scripts Folder, Create one (a Scripts Folder Called \"Modules\")\r\n\r\n\r\n4.\t Paste the Objects from the 2 Layouts\r\n\t*\tGo to the OAuthProfiles_Dashboard Layout in this file, Enter Layout Mode, Select All,and Copy\r\n\t\t*\tGo to the OAuthProfiles_Dashboard Layout in YOUR file, Enter Layout Mode, Select All, Delete, then Paste\r\n\t\t*\tDo the same for the OAuthProfiles_WVpopup\r\n\r\n\r\n5.\t Follow steps 1, 2, and 3 as described in Use Case 1\r\n\t*\tHere you will find an example use case\r\n\t*\tAlso, open and read the comments in the Script: OAuth_Processor\r\n\r\n\r\n---\r\n#### CODING PHILOSOPHY:\r\nThe Scripts and Calculations in this solution, as with everything I do in FileMaker, is written in consideration of the next developer  \r\nWith that in mind:\r\n\r\n- **Calculations** are written in the vernacular taught to my by my 5th grade algebra teacher: **SHOW YOUR WORK**  \r\nTo that end, I make extensive use of the LET Statement, to show the reader (you) my logical progression as I manipulate the values\r\n\t- \tsometimes at the expense of brevity, but always to the benefit of clarity and safety, as well as for the consideration of those without access the FileMakerPro Advanced\r\n- **Global Variables** are strictly avoided (and not used at all in this Module)\r\nthey are a powerful tool that work best when they are used as little as possible\r\n\r\n- **Scripted Finds** are written out long (Enter Find Mode, Set Field, Perform Find)  \r\n(With few exceptions) this makes scripts easier to read and comprehend by other developers\r\n\r\n- **Internal SQL** calls are not used  \r\nand, in my opinion, should only be used by the Lead, or Primary Developer (as with Global Variables)\r\n\r\n---\r\n\r\n\r\n#### TODO:\r\nA second set of scripts using Custom Functions, and accepting all the required values passed as Parameters,\r\nhas been pushed back for the next release, pending feedback received by this initial release.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}